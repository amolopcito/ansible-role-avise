---
- name: Check if docker is installed
  shell: "which docker | wc -l"
  register: result
  changed_when: false

- block:
  - name: Set error messgae if docker is not installed
    set_fact:
      error_string: "Docker is not installed. Please install docker for ServiceEngine container to be started"
  - name: Include error.yml
    include: error.yml
  when: result.stdout == "0"

- block:
    - name: Check if docker is running
      shell: "ps -ef | grep docker | grep -v grep | wc -l"
      register: result
      changed_when: false

- block:
    - name: set error messgae if docker is not running
      set_fact:
        error_string: "Docker is not running, please start docker"
    - name: Include error.yml
      include: error.yml
      when: result.stdout == "0"

- name: docker version check
  shell: "docker --version | awk '{print $3}' | sed -e 's/,//'"
  register: result

- block:
    - name: Set error message if docker version is less than 1.6.1
      set_fact:
        error_string: "Docker version {{ result.stdout }} not supported for spawning ServiceEngine container, please upgrade docker to 1.6.1 or greater"
    - name: Include error.yml
      include: error.yml
      when: result.stdout is version('1.6.1', '<')

- block:
    - name: Verify the docker storage
      shell: "docker info | grep 'Data loop file:' | awk '{print $4}'"
      register: docker_dir
    - name: Set docker disk directory
      set_fact:
        docker_disk_dir: "{{ docker_dir.stdout }}"
        when: docker_dir.stdout != ""
      when: docker_disk_dir is not defined
      become: true

- block:
    - name: Get docker directory
      shell: "docker info | grep '^ Root Dir:' | awk '{print $3}'"
      register: docker_dir
    - name: Set docker disk directory
      set_fact:
        docker_disk_dir: "{{ docker_dir.stdout }}"
        when: docker_dir.stdout != ""
      when: docker_disk_dir is not defined
      become: true

- block:
    - name: Get docker directory
      shell: "docker info | grep 'Docker Root Dir:' | awk '{print $4}'"
      register: docker_dir
    - name: Set docker disk directory
      set_fact:
        docker_disk_dir: "{{ docker_dir.stdout }}"
        when: docker_dir.stdout != ""
      when: docker_disk_dir is not defined
      become: true

- block:
    - name: Get docker disk available size
      shell: "df {{ docker_disk_dir }} -P | grep -iv Used | awk '{print $4}'"
      register: size_avail
    - name: Set docker size
      set_fact:
        docker_size_avail: "{{ size_avail.stdout }}"
      when: docker_disk_dir is defined
      become: true

- block:
    - name: Get available size
      shell: "docker info | grep 'Data Space Available:' | awk '{print $4}'"
      register: size_avail
    - name: Get available size
      shell: "docker info | grep 'Data Space Available:' | awk '{print $5}'"
      register: format
    - name: Set docker available size in TB
      set_fact:
        docker_size_avail: "{{ size_avail.stdout|int * 1024 * 1024 * 1024 }}"
      when: format.stdout == "TB"
    - name: Set docker available size in GB
      set_fact:
        docker_size_avail: "{{ size_avail.stdout|int * 1024 * 1024 }}"
      when: format.stdout == "GB"
    - name: Set docker available size in MB
      set_fact:
        docker_size_avail: "{{ size_avail.stdout|int * 1024 }}"
        when: format.stdout == "MB"
      when: docker_size_avail is not defined
      become: true

- block:
    - name: Set error message
      set_fact:
        error_string: "Docker disk size is not sufficient, available is {{ docker_size_avail|int / (1024 * 1024) }} GB, required disk size is {{ docker_size_req|int / (1024 * 1024) }} GB"
    - name: Include error.yml
      include: error.yml
      when: docker_size_avail and docker_size_avail|int < docker_size_req|int
